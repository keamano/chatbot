package com.example.persistence;

import com.example.domain.Bot;
import com.example.persistence.BotRepository;
import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.stereotype.Repository;

import java.sql.Date;
import java.util.List;

@Repository
public class EmployeeRepositoryImpl implements BotRepository {

    private final NamedParameterJdbcTemplate jdbcTemplate;

    // NamedParameterJdbcTemplateをDIする（@Autowiredは省略）
    public EmployeeRepositoryImpl(NamedParameterJdbcTemplate jdbcTemplate) {
        this.jdbcTemplate = jdbcTemplate;
    }

    @Override
    public List<Employee> findAll() {
        String sql = "SELECT e.id, e.name, e.joined_date," +
                " d.id AS department_id, d.name AS department_name" +
                " FROM employee e" +
                " JOIN department d ON e.department_id = d.id" +
                " ORDER BY e.id";
        List<Bot> employeeList = jdbcTemplate.query(sql,
                (rs, rowNum) -> new Employee(rs.getInt("id"),
                        rs.getString("name"),
                        rs.getDate("joined_date").toLocalDate(),
                        rs.getInt("department_id"),
                        rs.getString("department_name"))
                );
        return employeeList;
    }

    @Override
    public int insert(Employee employee) {
        String sql = "INSERT INTO employee(name, joined_date, department_id)" +
                " VALUES(:name, :joined_date, :department_id)";
        MapSqlParameterSource parameterSource = new MapSqlParameterSource();
        parameterSource.addValue("name", employee.getName());
        parameterSource.addValue("joined_date", Date.valueOf(employee.getJoinedDate()));
        parameterSource.addValue("department_id", employee.getDepartmentId());
        int rows = jdbcTemplate.update(sql, parameterSource);
        return rows;
    }
}
